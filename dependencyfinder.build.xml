<project name="dependencyfinder" default="dependencyfinder">
  <description>
  Provides the DependencyFinder tool and the DependencyFinder sensor.
  </description>

  <import file="build.xml"/>
  <property environment="env"/>
  <property name="dependencyfinder.dir" location="${build.dir}/dependencyfinder" />
  <path id="dependencyfinder.path">
    <pathelement location="${env.DEPENDENCYFINDER_HOME}/classes" />
    <pathelement location="${env.DEPENDENCYFINDER_HOME}/lib/DependencyFinder.jar" />
    <pathelement location="${env.DEPENDENCYFINDER_HOME}/lib/jakarta-oro.jar" />
    <pathelement location="${env.DEPENDENCYFINDER_HOME}/lib/log4j.jar" />
  </path>

  <target name="dependencyfinder" depends="dependencyfinder.tool, dependencyfinder.report, dependencyfinder.sensor" 
   description="Runs DependencyFinder tool, report, and sensor."/>

  <target name="dependencyfinder.tool" depends="compile" description="Computes dependency metrics on the source code.">
    <!-- Verify that DependencyFinder is installed. -->
    <available file="${env.DEPENDENCYFINDER_HOME}/lib/DependencyFinder.jar" property="dependencyfinder.available"/>
    <fail unless="dependencyfinder.available" message="Error: DEPENDENCYFINDER_HOME not set or dependencyfinder.jar not found."/>
    <taskdef name="dependencyextractor" classname="com.jeantessier.dependencyfinder.ant.DependencyExtractor" classpathref="dependencyfinder.path"/>    
    <taskdef name="dependencyreporter" classname="com.jeantessier.dependencyfinder.ant.DependencyReporter" classpathref="dependencyfinder.path"/>    
    <mkdir dir="${dependencyfinder.dir}"/>
    <!-- Extract dependencies, excluding java.* and javax.* packages. -->
    <dependencyextractor destfile="${dependencyfinder.dir}/all.xml" filterexcludes="/^java\./||/^javax\./" xml="yes" minimize="yes"  dtdprefix="${env.DEPENDENCYFINDER_HOME}/etc">
      <path path="${build.dir}/classes" />
    </dependencyextractor>
    <!-- Create a class2class.xml file containing just class-level dependency information. -->
    <dependencyreporter srcfile="${dependencyfinder.dir}/all.xml" destfile="${dependencyfinder.dir}/class2class.xml" 
      c2c="yes" showall="yes"  validate="yes" xml="yes" dtdprefix="${env.DEPENDENCYFINDER_HOME}/etc" />
  </target>

  <target name="dependencyfinder.report" description="Generates an HTML report from DependencyFinder data.">
    <xslt style="${env.DEPENDENCYFINDER_HOME}/etc/DependencyGraphToHTML.xsl" 
          in="${dependencyfinder.dir}/all.xml" out="${dependencyfinder.dir}/all/index.html" />
    <xslt style="${env.DEPENDENCYFINDER_HOME}/etc/DependencyGraphToHTML.xsl" 
          in="${dependencyfinder.dir}/class2class.xml" out="${dependencyfinder.dir}/class2class/index.html" />
  </target>

 
  <target name="dependencyfinder.sensor" if="hackystat.enabled" unless="jdepend.disabled" description="Sends JDepend coupling data to Hackystat.">
    <fileset id="dependencyfinder.sourcefiles" dir="${src.dir}" includes="**/*.java" excludes="**/jaxb/**"/>
    <fileset id="dependencyfinder.datafiles" file="${dependencyfinder.dir}/class2class.xml" />
    <hackystat.dependencyfinder dependencyfinder.datafiles.fileset="dependencyfinder.datafiles" dependencyfinder.sourcefiles.fileset="dependencyfinder.sourcefiles" verbose="${hackystat.verbose.mode}" />
  </target>

  <!--
  <target name="dependencyfinder.sensor" description="Sends Dependency data to Hackystat using the DependencyFinder sensor.">
    <available classname="org.hackystat.sensor.dependencyfinder.DependencyFinderSensor" property="dependencyfinder.sensor.available"/>
    <fail unless="dependencyfinder.sensor.available" message="Error: DependencyFinder sensor not installed."/>
    <taskdef name="hacky-dependency" classname="org.hackystat.sensor.dependencyfinder.DependencyFinderSensor" />    

    <hacky-dependency verbose="${hackystat.verbose.mode}"
                      class2ClassFile="${dependencyfinder.dir}/class2class.xml" 
                      package2packageFile="${dependencyfinder.dir}/package2package.xml">
      <fileset dir="${src.dir}" includes="**/*.java"/>
    </hacky-dependency>
  </target>
  -->
</project>

